openapi: 3.0.3
info:
  title: Dokumen API Cloud Function - OpenAPI 3.0
  description: >-
    Dokumen API Cloud Function Aplikasi Inventory Management Warehouse
  termsOfService: https://github.com/warehousemanagement88/swagger
  contact:
    email: ramadhanialnovianti@gmail.com
  license:
    name: Warehouse Package
    url: https://pkg.go.dev/github.com/warehousemanagement88/be_warehouse
  version: 1.0.11
externalDocs:
  description: Repo GCF
  url: https://warehousemanagement88.github.io/gcf/
servers:
  - url: https://asia-southeast2-warehousemanagement88.cloudfunctions.net
tags:
  - name: User
    description: Data User
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://warehousemanagement88.github.io/gcf/user/
  - name: Auth
    description: Auth to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://warehousemanagement88.github.io/gcf/login/
  - name: Staff
    description: Staff to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://warehousemanagement88.github.io/gcf/staff/
  - name: Gudang A
    description: Gudang A to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://warehousemanagement88.github.io/gcf/gudanga/
  - name: Gudang B
    description: Gudang B to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://warehousemanagement88.github.io/gcf/gudangb/
  - name: Gudang C
    description: Gudang C to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://warehousemanagement88.github.io/gcf/gudangc/
paths:
  /warehouse-user:
    get:
      tags:
        - User
      summary: Get All User
      description: List Data User
      operationId: getUserJSON
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "400":
          description: Invalid status value
  /warehouse-login:
    post:
      tags:
        - Auth
      summary: Login get Token
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "405":
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /warehouse-staff/{staffId}:
    get:
      tags:
        - Staff
      summary: Get Staff by ID
      description: Get a Staff by its ID
      operationId: getStaffById
      parameters:
        - name: staffId
          in: path
          required: true
          schema:
            type: string
          description: ID of the Staff
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Staff"
        "404":
          description: Staff not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
    put:
      tags:
        - Staff
      summary: Update Staff
      description: Update an existing Staff
      operationId: updateStaff
      parameters:
        - name: staffId
          in: path
          required: true
          schema:
            type: string
          description: ID of the Staff
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Staff"
      responses:
        "200":
          description: Staff updated successfully
        "404":
          description: Staff not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /warehouse-gudanga:
    get:
      tags:
        - GudangA
      summary: Get All GudangA
      description: List Data GudangA
      operationId: getAllGudangA
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GudangAArray"
      security:
        - token:
            - write:apiKey
            - read:apiKey
    post:
      tags:
        - GudangA
      summary: Create GudangA
      description: Create a new GudangA
      operationId: createGudangA
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GudangA"
      responses:
        "201":
          description: GudangA created successfully
        "400":
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /gudanga/{gudangaId}:
    get:
      tags:
        - GudangA
      summary: Get GudangA by ID
      description: Get a GudangA by its ID
      operationId: getGudangAById
      parameters:
        - name: gudangaId
          in: path
          required: true
          schema:
            type: string
          description: ID of the GudangA
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GudangA"
        "404":
          description: GudangA not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
    put:
      tags:
        - GudangA
      summary: Update GudangA
      description: Update an existing GudangA
      operationId: updateGudangA
      parameters:
        - name: gudangaId
          in: path
          required: true
          schema:
            type: string
          description: ID of the GudangA
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GudangA"
      responses:
        "200":
          description: GudangA updated successfully
        "404":
          description: GudangA not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /warehouse-gudangb:
    get:
      tags:
        - GudangB
      summary: Get All GudangB
      description: List Data GudangB
      operationId: getAllGudangB
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GudangBArray"
      security:
        - token:
            - write:apiKey
            - read:apiKey
    post:
      tags:
        - GudangB
      summary: Create GudangB
      description: Create a new GudangB
      operationId: createGudangB
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GudangB"
      responses:
        "201":
          description: GudangB created successfully
        "400":
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
/gudangb/{gudangbId}:
  get:
    tags:
      - GudangB
    summary: Get GudangB by ID
    description: Get a GudangB by its ID
    operationId: getGudangBById
    parameters:
      - name: gudangbId
        in: path
        required: true
        schema:
          type: string
        description: ID of the GudangB
    responses:
      "200":
        description: successful operation
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GudangB"
      "404":
        description: GudangB not found
    security:
      - token:
          - write:apiKey
          - read:apiKey
  put:
    tags:
      - GudangB
    summary: Update GudangB
    description: Update an existing GudangB
    operationId: updateGudangB
    parameters:
      - name: gudangbId
        in: path
        required: true
        schema:
          type: string
        description: ID of the GudangB
    requestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GudangB"
    responses:
      "200":
        description: GudangB updated successfully
      "404":
        description: GudangB not found
    security:
      - token:
          - write:apiKey
          - read:apiKey

/warehouse-gudangc:
  get:
    tags:
      - GudangC
    summary: Get All GudangC
    description: List Data GudangC
    operationId: getAllGudangC
    responses:
      "200":
        description: successful operation
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GudangCArray"
    security:
      - token:
          - write:apiKey
          - read:apiKey
  post:
    tags:
      - GudangC
    summary: Create GudangC
    description: Create a new GudangC
    operationId: createGudangC
    requestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GudangC"
    responses:
      "201":
        description: GudangC created successfully
      "400":
        description: Invalid input
    security:
      - token:
          - write:apiKey
          - read:apiKey

/gudangc/{gudangcId}:
  get:
    tags:
      - GudangC
    summary: Get GudangC by ID
    description: Get a GudangC by its ID
    operationId: getGudangCById
    parameters:
      - name: gudangcId
        in: path
        required: true
        schema:
          type: string
        description: ID of the GudangC
    responses:
      "200":
        description: successful operation
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GudangC"
      "404":
        description: GudangC not found
    security:
      - token:
          - write:apiKey
          - read:apiKey
  put:
    tags:
      - GudangC
    summary: Update GudangC
    description: Update an existing GudangC
    operationId: updateGudangC
    parameters:
      - name: gudangcId
        in: path
        required: true
        schema:
          type: string
        description: ID of the GudangC
    requestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GudangC"
    responses:
      "200":
        description: GudangC updated successfully
      "404":
        description: GudangC not found
    security:
      - token:
          - write:apiKey
          - read:apiKey

requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Login"
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AuthResponse"
